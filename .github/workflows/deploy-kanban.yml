#  ┌─────────────────────────────────────────────────────────┐
#  │  Deploy Kanban Board to Cloud Run via Cloud Build     │
#  │  • main         → auto-build + deploy to production    │
#  │  • other branch → manual "Run workflow" → dev deploy   │
#  └─────────────────────────────────────────────────────────┘

name: Deploy to Cloud Run via Cloud Build

on:
  push:
    branches: [ main ]        # automatic path
  workflow_dispatch: {}       # manual path ("Run workflow" button)

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write         # needed for OIDC

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/49477009498/locations/global/workloadIdentityPools/github-pool/providers/github-provider
          service_account: github-actions@floofgg.iam.gserviceaccount.com

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: floofgg

      # ───────────────────────────────────────────────────────
      # Node 20 + npm cache based on package-lock.json
      # ───────────────────────────────────────────────────────
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Node dependencies
        run: |
          set -e
          npm ci

      - name: Set environment variables
        id: env
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "SERVICE_NAME=kanban-board"  >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=production"     >> $GITHUB_OUTPUT
          else
            echo "SERVICE_NAME=kanban-board-dev" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=development"   >> $GITHUB_OUTPUT
          fi

      - name: Load secret env.json
        id: secrets
        run: |
          gcloud secrets versions access latest --secret app-config > env.json
          cat env.json | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV

      - name: Submit build to Cloud Build
        run: |
          unset SERVICE_URL || true
          gcloud builds submit \
            --project=floofgg \
            --config=cloudbuild.yaml \
            --substitutions=_COMMIT_SHA=${{ github.sha }},_SERVICE_NAME=${{ steps.env.outputs.SERVICE_NAME }},_ENVIRONMENT=${{ steps.env.outputs.ENVIRONMENT }},_VITE_CLERK_PUBLISHABLE_KEY=$VITE_CLERK_PUBLISHABLE_KEY,_VITE_GDRIVE_CLIENT_ID=$VITE_GDRIVE_CLIENT_ID,_VITE_GAPI_KEY=$VITE_GAPI_KEY,_CLERK_SECRET_KEY=$CLERK_SECRET_KEY \
            --gcs-log-dir=gs://floofgg_cloudbuild/logs \