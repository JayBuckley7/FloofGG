#  ┌─────────────────────────────────────────────────────────┐
#  │  Deploy Kanban Board to Cloud Run via Cloud Build      │
#  └─────────────────────────────────────────────────────────┘

name: Deploy to Cloud Run via Cloud Build

on:
  push:
    branches: [ main ]            # auto prod deploy
  workflow_dispatch: {}           # manual dev deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write             # OIDC → Workload Identity

    steps:
    # ─── Repo + GCP auth ───────────────────────────────────
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: projects/49477009498/locations/global/workloadIdentityPools/github-pool/providers/github-provider
        service_account: github-actions@floofgg.iam.gserviceaccount.com

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: floofgg

    # ─── Node + npm cache ──────────────────────────────────
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: npm
        cache-dependency-path: package-lock.json

    - name: Install Node dependencies
      run: |
        set -e
        npm ci

    # ─── Choose prod vs dev service names ──────────────────
    - name: Set environment variables
      id: env
      run: |
        if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
          echo "SERVICE_NAME=kanban-board"      >> $GITHUB_OUTPUT
          echo "ENVIRONMENT=production"         >> $GITHUB_OUTPUT
        else
          echo "SERVICE_NAME=kanban-board-dev"  >> $GITHUB_OUTPUT
          echo "ENVIRONMENT=development"        >> $GITHUB_OUTPUT
        fi

    # ─── Load front-end build vars (app-config) ────────────
    - name: Load secret env.json
      id: secrets
      run: |
        gcloud secrets versions access latest --secret app-config > env.json
        cat env.json | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV

    # ───────────────────────────────────────────────────────
    # Convex deploy block  — minimal, no extra provider keys
    # ───────────────────────────────────────────────────────
    - name: Load Convex deploy key
      run: |
        gcloud secrets versions access latest --secret convex-deploy-key > deploy.key
        echo "CONVEX_DEPLOY_KEY=$(cat deploy.key)" >> $GITHUB_ENV

    - name: Install Convex CLI
      run: npm install -g convex@latest

    - name: Convex deploy
      env:
        CONVEX_DEPLOY_KEY: ${{ env.CONVEX_DEPLOY_KEY }}
      run: |
        convex deploy        # migrate schema if needed; no additional flags
    # ───────────────────────────────────────────────────────

    # ─── Cloud Build: build + deploy Cloud Run ─────────────
    - name: Submit build to Cloud Build
      run: |
        gcloud builds submit \
          --project=floofgg \
          --config=cloudbuild.yaml \
          --substitutions=_COMMIT_SHA=${{ github.sha }},_SERVICE_NAME=${{ steps.env.outputs.SERVICE_NAME }},_ENVIRONMENT=${{ steps.env.outputs.ENVIRONMENT }},_VITE_CONVEX_URL=$VITE_CONVEX_URL \
          --gcs-log-dir=gs://floofgg_cloudbuild/logs
